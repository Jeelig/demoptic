# This is a basic workflow to help you get started with Actions

name: Build Android

on: [workflow_dispatch]

env:
  FTP_HOST: ftp.liputa.fr
  FTP_USER: liputa
  FTP_PASSWORD: Liputa2016
  FTP_FOLDER: "/AXELIB/files/temp/apk"

jobs:
  prepare:
    name: ðŸš€ Prepare APP
    runs-on: ubuntu-latest
    environment: 
      name: DEV
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install Cordova
        run: npm install -g cordova

      - name: Install Ionic
        run: npm install -g @ionic/cli

      - name: Install app dependencies
        run: npm install

      - name: Add Android platform
        run: cordova platform add android@latest

      - name: Add Plugins splashscreen
        run: cordova plugin add cordova-plugin-splashscreen

      #- name: Add Plugins whitelist
      #  run: cordova plugin add cordova-plugin-whitelist

      - name: Add Plugins device
        run: cordova plugin add cordova-plugin-device

      - name: Add Plugins statusbar
        run: cordova plugin add cordova-plugin-statusbar

      - name: Add Plugins dialogs
        run: cordova plugin add cordova-plugin-dialogs

      - name: Add Plugins file
        run: cordova plugin add cordova-plugin-file
        
      - name: Add Plugin Splashscreen
        run: cordova plugin add cordova-plugin-splashscreen

      - name: Add Plugin camera
        run: cordova plugin add https://github.com/apache/cordova-plugin-camera.git
        
      #- name: Add Plugins firebase
      #  run: cordova plugin add cordova-plugin-firebase-lib --save
      
      #- name: Read all files
      #  run: ls -R
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-folders
          path: |
            res
            www
            cordova
            plugins
            platforms
            config.xml
            package.json

  build:
    name: Build App
    needs: prepare
    runs-on: ubuntu-latest
    environment: 
      name: DEV
    steps:
    
      - name: Retrieve Artifact
        uses: actions/download-artifact@v3
        with:
          name: app-folders
          
      - name: Display structure of downloaded files
        run: ls -R
        
      #START
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install Cordova
        run: npm install -g cordova

      - name: Install Ionic
        run: npm install -g @ionic/cli

      - name: Install app dependencies
        run: npm install
      #END
      
      - name: Build Android Dev APK
        run: cordova build android --debug

      - name: Generate the Android App Bundle
        working-directory: ./platforms/android/
        run: ./gradlew bundle
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-dev
          path: platforms/android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
  
  
  deploy:
    name: Deploy App
    needs: build
    runs-on: ubuntu-latest
    steps:
    
      - name: Retrieve Artifact
        uses: actions/download-artifact@v2
        with:
          name: app-dev
          path: platforms/android/app/build/outputs/apk/debug/app-debug.apk

      - name: Create folder
        run: |
          mkdir -p AppFolder && cp -R platforms/android/app/build/outputs/apk/debug AppFolder

      - name: Upload APK to FTP
        uses: kevinpainchaud/simple-ftp-deploy-action@v1.2.1
        with:
          ftp_host: ${{env.FTP_HOST}}
          ftp_username: ${{env.FTP_USER}}
          ftp_password: ${{env.FTP_PASSWORD}}
          local_source_dir: "AppFolder"
          dist_target_dir: ${{env.FTP_FOLDER}}

